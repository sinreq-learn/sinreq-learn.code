import tensorflow as tf
import helper
from helper import *

def googlenet_noisy(input_node, netparams, err_mean, err_stddev, train_vars):
	weights_noisy, biases_noisy, err_w, err_b = helper.add_noise(netparams['weights'], netparams['biases'], err_mean, err_stddev, train_vars)
	mean, variance, scale, offset = netparams['mean'], netparams['variance'], netparams['scale'], netparams['offset']
	err_lyr = {}
	layers_err  = {}
	data_spec = helper.get_data_spec('googlenet')
	err_lyr['input'] = tf.get_variable(name='input_lyr_err', shape=(1, data_spec.crop_size, data_spec.crop_size, data_spec.channels), initializer=tf.random_normal_initializer(mean=err_mean[0], stddev=err_stddev[0]), trainable=train_vars[0])
	input_node_noisy = tf.add(input_node, err_lyr['input'])
	conv1_7x7_s2 = conv(input_node_noisy, weights_noisy['conv1_7x7_s2'], biases_noisy['conv1_7x7_s2'], 2, 2)
	err_lyr['conv1_7x7_s2'] = tf.get_variable(name='conv1_7x7_s2_lyr_err', shape=conv1_7x7_s2.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['conv1_7x7_s2'] = tf.add(conv1_7x7_s2, err_lyr['conv1_7x7_s2'])
	pool1_3x3_s2 = max_pool(layers_err['conv1_7x7_s2'], 3, 3, 2, 2)
	pool1_norm1 = lrn(pool1_3x3_s2, 2, 1.99999994948e-05, 0.75)
	conv2_3x3_reduce = conv(pool1_norm1, weights_noisy['conv2_3x3_reduce'], biases_noisy['conv2_3x3_reduce'], 1, 1)
	err_lyr['conv2_3x3_reduce'] = tf.get_variable(name='conv2_3x3_reduce_lyr_err', shape=conv2_3x3_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['conv2_3x3_reduce'] = tf.add(conv2_3x3_reduce, err_lyr['conv2_3x3_reduce'])
	conv2_3x3 = conv(layers_err['conv2_3x3_reduce'], weights_noisy['conv2_3x3'], biases_noisy['conv2_3x3'], 1, 1)
	err_lyr['conv2_3x3'] = tf.get_variable(name='conv2_3x3_lyr_err', shape=conv2_3x3.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['conv2_3x3'] = tf.add(conv2_3x3, err_lyr['conv2_3x3'])
	conv2_norm2 = lrn(layers_err['conv2_3x3'], 2, 1.99999994948e-05, 0.75)
	pool2_3x3_s2 = max_pool(conv2_norm2, 3, 3, 2, 2)
	inception_3a_1x1 = conv(pool2_3x3_s2, weights_noisy['inception_3a_1x1'], biases_noisy['inception_3a_1x1'], 1, 1)
	err_lyr['inception_3a_1x1'] = tf.get_variable(name='inception_3a_1x1_lyr_err', shape=inception_3a_1x1.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_3a_1x1'] = tf.add(inception_3a_1x1, err_lyr['inception_3a_1x1'])
	inception_3a_3x3_reduce = conv(pool2_3x3_s2, weights_noisy['inception_3a_3x3_reduce'], biases_noisy['inception_3a_3x3_reduce'], 1, 1)
	err_lyr['inception_3a_3x3_reduce'] = tf.get_variable(name='inception_3a_3x3_reduce_lyr_err', shape=inception_3a_3x3_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_3a_3x3_reduce'] = tf.add(inception_3a_3x3_reduce, err_lyr['inception_3a_3x3_reduce'])
	inception_3a_3x3 = conv(layers_err['inception_3a_3x3_reduce'], weights_noisy['inception_3a_3x3'], biases_noisy['inception_3a_3x3'], 1, 1)
	err_lyr['inception_3a_3x3'] = tf.get_variable(name='inception_3a_3x3_lyr_err', shape=inception_3a_3x3.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_3a_3x3'] = tf.add(inception_3a_3x3, err_lyr['inception_3a_3x3'])
	inception_3a_5x5_reduce = conv(pool2_3x3_s2, weights_noisy['inception_3a_5x5_reduce'], biases_noisy['inception_3a_5x5_reduce'], 1, 1)
	err_lyr['inception_3a_5x5_reduce'] = tf.get_variable(name='inception_3a_5x5_reduce_lyr_err', shape=inception_3a_5x5_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_3a_5x5_reduce'] = tf.add(inception_3a_5x5_reduce, err_lyr['inception_3a_5x5_reduce'])
	inception_3a_5x5 = conv(layers_err['inception_3a_5x5_reduce'], weights_noisy['inception_3a_5x5'], biases_noisy['inception_3a_5x5'], 1, 1)
	err_lyr['inception_3a_5x5'] = tf.get_variable(name='inception_3a_5x5_lyr_err', shape=inception_3a_5x5.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_3a_5x5'] = tf.add(inception_3a_5x5, err_lyr['inception_3a_5x5'])
	inception_3a_pool = max_pool(pool2_3x3_s2, 3, 3, 1, 1)
	inception_3a_pool_proj = conv(inception_3a_pool, weights_noisy['inception_3a_pool_proj'], biases_noisy['inception_3a_pool_proj'], 1, 1)
	err_lyr['inception_3a_pool_proj'] = tf.get_variable(name='inception_3a_pool_proj_lyr_err', shape=inception_3a_pool_proj.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_3a_pool_proj'] = tf.add(inception_3a_pool_proj, err_lyr['inception_3a_pool_proj'])
	inception_3a_output = concat([layers_err['inception_3a_1x1'], layers_err['inception_3a_3x3'], layers_err['inception_3a_5x5'], layers_err['inception_3a_pool_proj']], 3)
	inception_3b_1x1 = conv(inception_3a_output, weights_noisy['inception_3b_1x1'], biases_noisy['inception_3b_1x1'], 1, 1)
	err_lyr['inception_3b_1x1'] = tf.get_variable(name='inception_3b_1x1_lyr_err', shape=inception_3b_1x1.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_3b_1x1'] = tf.add(inception_3b_1x1, err_lyr['inception_3b_1x1'])
	inception_3b_3x3_reduce = conv(inception_3a_output, weights_noisy['inception_3b_3x3_reduce'], biases_noisy['inception_3b_3x3_reduce'], 1, 1)
	err_lyr['inception_3b_3x3_reduce'] = tf.get_variable(name='inception_3b_3x3_reduce_lyr_err', shape=inception_3b_3x3_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_3b_3x3_reduce'] = tf.add(inception_3b_3x3_reduce, err_lyr['inception_3b_3x3_reduce'])
	inception_3b_3x3 = conv(layers_err['inception_3b_3x3_reduce'], weights_noisy['inception_3b_3x3'], biases_noisy['inception_3b_3x3'], 1, 1)
	err_lyr['inception_3b_3x3'] = tf.get_variable(name='inception_3b_3x3_lyr_err', shape=inception_3b_3x3.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_3b_3x3'] = tf.add(inception_3b_3x3, err_lyr['inception_3b_3x3'])
	inception_3b_5x5_reduce = conv(inception_3a_output, weights_noisy['inception_3b_5x5_reduce'], biases_noisy['inception_3b_5x5_reduce'], 1, 1)
	err_lyr['inception_3b_5x5_reduce'] = tf.get_variable(name='inception_3b_5x5_reduce_lyr_err', shape=inception_3b_5x5_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_3b_5x5_reduce'] = tf.add(inception_3b_5x5_reduce, err_lyr['inception_3b_5x5_reduce'])
	inception_3b_5x5 = conv(layers_err['inception_3b_5x5_reduce'], weights_noisy['inception_3b_5x5'], biases_noisy['inception_3b_5x5'], 1, 1)
	err_lyr['inception_3b_5x5'] = tf.get_variable(name='inception_3b_5x5_lyr_err', shape=inception_3b_5x5.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_3b_5x5'] = tf.add(inception_3b_5x5, err_lyr['inception_3b_5x5'])
	inception_3b_pool = max_pool(inception_3a_output, 3, 3, 1, 1)
	inception_3b_pool_proj = conv(inception_3b_pool, weights_noisy['inception_3b_pool_proj'], biases_noisy['inception_3b_pool_proj'], 1, 1)
	err_lyr['inception_3b_pool_proj'] = tf.get_variable(name='inception_3b_pool_proj_lyr_err', shape=inception_3b_pool_proj.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_3b_pool_proj'] = tf.add(inception_3b_pool_proj, err_lyr['inception_3b_pool_proj'])
	inception_3b_output = concat([layers_err['inception_3b_1x1'], layers_err['inception_3b_3x3'], layers_err['inception_3b_5x5'], layers_err['inception_3b_pool_proj']], 3)
	pool3_3x3_s2 = max_pool(inception_3b_output, 3, 3, 2, 2)
	inception_4a_1x1 = conv(pool3_3x3_s2, weights_noisy['inception_4a_1x1'], biases_noisy['inception_4a_1x1'], 1, 1)
	err_lyr['inception_4a_1x1'] = tf.get_variable(name='inception_4a_1x1_lyr_err', shape=inception_4a_1x1.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4a_1x1'] = tf.add(inception_4a_1x1, err_lyr['inception_4a_1x1'])
	inception_4a_3x3_reduce = conv(pool3_3x3_s2, weights_noisy['inception_4a_3x3_reduce'], biases_noisy['inception_4a_3x3_reduce'], 1, 1)
	err_lyr['inception_4a_3x3_reduce'] = tf.get_variable(name='inception_4a_3x3_reduce_lyr_err', shape=inception_4a_3x3_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4a_3x3_reduce'] = tf.add(inception_4a_3x3_reduce, err_lyr['inception_4a_3x3_reduce'])
	inception_4a_3x3 = conv(layers_err['inception_4a_3x3_reduce'], weights_noisy['inception_4a_3x3'], biases_noisy['inception_4a_3x3'], 1, 1)
	err_lyr['inception_4a_3x3'] = tf.get_variable(name='inception_4a_3x3_lyr_err', shape=inception_4a_3x3.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4a_3x3'] = tf.add(inception_4a_3x3, err_lyr['inception_4a_3x3'])
	inception_4a_5x5_reduce = conv(pool3_3x3_s2, weights_noisy['inception_4a_5x5_reduce'], biases_noisy['inception_4a_5x5_reduce'], 1, 1)
	err_lyr['inception_4a_5x5_reduce'] = tf.get_variable(name='inception_4a_5x5_reduce_lyr_err', shape=inception_4a_5x5_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4a_5x5_reduce'] = tf.add(inception_4a_5x5_reduce, err_lyr['inception_4a_5x5_reduce'])
	inception_4a_5x5 = conv(layers_err['inception_4a_5x5_reduce'], weights_noisy['inception_4a_5x5'], biases_noisy['inception_4a_5x5'], 1, 1)
	err_lyr['inception_4a_5x5'] = tf.get_variable(name='inception_4a_5x5_lyr_err', shape=inception_4a_5x5.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4a_5x5'] = tf.add(inception_4a_5x5, err_lyr['inception_4a_5x5'])
	inception_4a_pool = max_pool(pool3_3x3_s2, 3, 3, 1, 1)
	inception_4a_pool_proj = conv(inception_4a_pool, weights_noisy['inception_4a_pool_proj'], biases_noisy['inception_4a_pool_proj'], 1, 1)
	err_lyr['inception_4a_pool_proj'] = tf.get_variable(name='inception_4a_pool_proj_lyr_err', shape=inception_4a_pool_proj.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4a_pool_proj'] = tf.add(inception_4a_pool_proj, err_lyr['inception_4a_pool_proj'])
	inception_4a_output = concat([layers_err['inception_4a_1x1'], layers_err['inception_4a_3x3'], layers_err['inception_4a_5x5'], layers_err['inception_4a_pool_proj']], 3)
	inception_4b_1x1 = conv(inception_4a_output, weights_noisy['inception_4b_1x1'], biases_noisy['inception_4b_1x1'], 1, 1)
	err_lyr['inception_4b_1x1'] = tf.get_variable(name='inception_4b_1x1_lyr_err', shape=inception_4b_1x1.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4b_1x1'] = tf.add(inception_4b_1x1, err_lyr['inception_4b_1x1'])
	inception_4b_3x3_reduce = conv(inception_4a_output, weights_noisy['inception_4b_3x3_reduce'], biases_noisy['inception_4b_3x3_reduce'], 1, 1)
	err_lyr['inception_4b_3x3_reduce'] = tf.get_variable(name='inception_4b_3x3_reduce_lyr_err', shape=inception_4b_3x3_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4b_3x3_reduce'] = tf.add(inception_4b_3x3_reduce, err_lyr['inception_4b_3x3_reduce'])
	inception_4b_3x3 = conv(layers_err['inception_4b_3x3_reduce'], weights_noisy['inception_4b_3x3'], biases_noisy['inception_4b_3x3'], 1, 1)
	err_lyr['inception_4b_3x3'] = tf.get_variable(name='inception_4b_3x3_lyr_err', shape=inception_4b_3x3.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4b_3x3'] = tf.add(inception_4b_3x3, err_lyr['inception_4b_3x3'])
	inception_4b_5x5_reduce = conv(inception_4a_output, weights_noisy['inception_4b_5x5_reduce'], biases_noisy['inception_4b_5x5_reduce'], 1, 1)
	err_lyr['inception_4b_5x5_reduce'] = tf.get_variable(name='inception_4b_5x5_reduce_lyr_err', shape=inception_4b_5x5_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4b_5x5_reduce'] = tf.add(inception_4b_5x5_reduce, err_lyr['inception_4b_5x5_reduce'])
	inception_4b_5x5 = conv(layers_err['inception_4b_5x5_reduce'], weights_noisy['inception_4b_5x5'], biases_noisy['inception_4b_5x5'], 1, 1)
	err_lyr['inception_4b_5x5'] = tf.get_variable(name='inception_4b_5x5_lyr_err', shape=inception_4b_5x5.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4b_5x5'] = tf.add(inception_4b_5x5, err_lyr['inception_4b_5x5'])
	inception_4b_pool = max_pool(inception_4a_output, 3, 3, 1, 1)
	inception_4b_pool_proj = conv(inception_4b_pool, weights_noisy['inception_4b_pool_proj'], biases_noisy['inception_4b_pool_proj'], 1, 1)
	err_lyr['inception_4b_pool_proj'] = tf.get_variable(name='inception_4b_pool_proj_lyr_err', shape=inception_4b_pool_proj.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4b_pool_proj'] = tf.add(inception_4b_pool_proj, err_lyr['inception_4b_pool_proj'])
	inception_4b_output = concat([layers_err['inception_4b_1x1'], layers_err['inception_4b_3x3'], layers_err['inception_4b_5x5'], layers_err['inception_4b_pool_proj']], 3)
	inception_4c_1x1 = conv(inception_4b_output, weights_noisy['inception_4c_1x1'], biases_noisy['inception_4c_1x1'], 1, 1)
	err_lyr['inception_4c_1x1'] = tf.get_variable(name='inception_4c_1x1_lyr_err', shape=inception_4c_1x1.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4c_1x1'] = tf.add(inception_4c_1x1, err_lyr['inception_4c_1x1'])
	inception_4c_3x3_reduce = conv(inception_4b_output, weights_noisy['inception_4c_3x3_reduce'], biases_noisy['inception_4c_3x3_reduce'], 1, 1)
	err_lyr['inception_4c_3x3_reduce'] = tf.get_variable(name='inception_4c_3x3_reduce_lyr_err', shape=inception_4c_3x3_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4c_3x3_reduce'] = tf.add(inception_4c_3x3_reduce, err_lyr['inception_4c_3x3_reduce'])
	inception_4c_3x3 = conv(layers_err['inception_4c_3x3_reduce'], weights_noisy['inception_4c_3x3'], biases_noisy['inception_4c_3x3'], 1, 1)
	err_lyr['inception_4c_3x3'] = tf.get_variable(name='inception_4c_3x3_lyr_err', shape=inception_4c_3x3.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4c_3x3'] = tf.add(inception_4c_3x3, err_lyr['inception_4c_3x3'])
	inception_4c_5x5_reduce = conv(inception_4b_output, weights_noisy['inception_4c_5x5_reduce'], biases_noisy['inception_4c_5x5_reduce'], 1, 1)
	err_lyr['inception_4c_5x5_reduce'] = tf.get_variable(name='inception_4c_5x5_reduce_lyr_err', shape=inception_4c_5x5_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4c_5x5_reduce'] = tf.add(inception_4c_5x5_reduce, err_lyr['inception_4c_5x5_reduce'])
	inception_4c_5x5 = conv(layers_err['inception_4c_5x5_reduce'], weights_noisy['inception_4c_5x5'], biases_noisy['inception_4c_5x5'], 1, 1)
	err_lyr['inception_4c_5x5'] = tf.get_variable(name='inception_4c_5x5_lyr_err', shape=inception_4c_5x5.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4c_5x5'] = tf.add(inception_4c_5x5, err_lyr['inception_4c_5x5'])
	inception_4c_pool = max_pool(inception_4b_output, 3, 3, 1, 1)
	inception_4c_pool_proj = conv(inception_4c_pool, weights_noisy['inception_4c_pool_proj'], biases_noisy['inception_4c_pool_proj'], 1, 1)
	err_lyr['inception_4c_pool_proj'] = tf.get_variable(name='inception_4c_pool_proj_lyr_err', shape=inception_4c_pool_proj.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4c_pool_proj'] = tf.add(inception_4c_pool_proj, err_lyr['inception_4c_pool_proj'])
	inception_4c_output = concat([layers_err['inception_4c_1x1'], layers_err['inception_4c_3x3'], layers_err['inception_4c_5x5'], layers_err['inception_4c_pool_proj']], 3)
	inception_4d_1x1 = conv(inception_4c_output, weights_noisy['inception_4d_1x1'], biases_noisy['inception_4d_1x1'], 1, 1)
	err_lyr['inception_4d_1x1'] = tf.get_variable(name='inception_4d_1x1_lyr_err', shape=inception_4d_1x1.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4d_1x1'] = tf.add(inception_4d_1x1, err_lyr['inception_4d_1x1'])
	inception_4d_3x3_reduce = conv(inception_4c_output, weights_noisy['inception_4d_3x3_reduce'], biases_noisy['inception_4d_3x3_reduce'], 1, 1)
	err_lyr['inception_4d_3x3_reduce'] = tf.get_variable(name='inception_4d_3x3_reduce_lyr_err', shape=inception_4d_3x3_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4d_3x3_reduce'] = tf.add(inception_4d_3x3_reduce, err_lyr['inception_4d_3x3_reduce'])
	inception_4d_3x3 = conv(layers_err['inception_4d_3x3_reduce'], weights_noisy['inception_4d_3x3'], biases_noisy['inception_4d_3x3'], 1, 1)
	err_lyr['inception_4d_3x3'] = tf.get_variable(name='inception_4d_3x3_lyr_err', shape=inception_4d_3x3.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4d_3x3'] = tf.add(inception_4d_3x3, err_lyr['inception_4d_3x3'])
	inception_4d_5x5_reduce = conv(inception_4c_output, weights_noisy['inception_4d_5x5_reduce'], biases_noisy['inception_4d_5x5_reduce'], 1, 1)
	err_lyr['inception_4d_5x5_reduce'] = tf.get_variable(name='inception_4d_5x5_reduce_lyr_err', shape=inception_4d_5x5_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4d_5x5_reduce'] = tf.add(inception_4d_5x5_reduce, err_lyr['inception_4d_5x5_reduce'])
	inception_4d_5x5 = conv(layers_err['inception_4d_5x5_reduce'], weights_noisy['inception_4d_5x5'], biases_noisy['inception_4d_5x5'], 1, 1)
	err_lyr['inception_4d_5x5'] = tf.get_variable(name='inception_4d_5x5_lyr_err', shape=inception_4d_5x5.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4d_5x5'] = tf.add(inception_4d_5x5, err_lyr['inception_4d_5x5'])
	inception_4d_pool = max_pool(inception_4c_output, 3, 3, 1, 1)
	inception_4d_pool_proj = conv(inception_4d_pool, weights_noisy['inception_4d_pool_proj'], biases_noisy['inception_4d_pool_proj'], 1, 1)
	err_lyr['inception_4d_pool_proj'] = tf.get_variable(name='inception_4d_pool_proj_lyr_err', shape=inception_4d_pool_proj.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4d_pool_proj'] = tf.add(inception_4d_pool_proj, err_lyr['inception_4d_pool_proj'])
	inception_4d_output = concat([layers_err['inception_4d_1x1'], layers_err['inception_4d_3x3'], layers_err['inception_4d_5x5'], layers_err['inception_4d_pool_proj']], 3)
	inception_4e_1x1 = conv(inception_4d_output, weights_noisy['inception_4e_1x1'], biases_noisy['inception_4e_1x1'], 1, 1)
	err_lyr['inception_4e_1x1'] = tf.get_variable(name='inception_4e_1x1_lyr_err', shape=inception_4e_1x1.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4e_1x1'] = tf.add(inception_4e_1x1, err_lyr['inception_4e_1x1'])
	inception_4e_3x3_reduce = conv(inception_4d_output, weights_noisy['inception_4e_3x3_reduce'], biases_noisy['inception_4e_3x3_reduce'], 1, 1)
	err_lyr['inception_4e_3x3_reduce'] = tf.get_variable(name='inception_4e_3x3_reduce_lyr_err', shape=inception_4e_3x3_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4e_3x3_reduce'] = tf.add(inception_4e_3x3_reduce, err_lyr['inception_4e_3x3_reduce'])
	inception_4e_3x3 = conv(layers_err['inception_4e_3x3_reduce'], weights_noisy['inception_4e_3x3'], biases_noisy['inception_4e_3x3'], 1, 1)
	err_lyr['inception_4e_3x3'] = tf.get_variable(name='inception_4e_3x3_lyr_err', shape=inception_4e_3x3.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4e_3x3'] = tf.add(inception_4e_3x3, err_lyr['inception_4e_3x3'])
	inception_4e_5x5_reduce = conv(inception_4d_output, weights_noisy['inception_4e_5x5_reduce'], biases_noisy['inception_4e_5x5_reduce'], 1, 1)
	err_lyr['inception_4e_5x5_reduce'] = tf.get_variable(name='inception_4e_5x5_reduce_lyr_err', shape=inception_4e_5x5_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4e_5x5_reduce'] = tf.add(inception_4e_5x5_reduce, err_lyr['inception_4e_5x5_reduce'])
	inception_4e_5x5 = conv(layers_err['inception_4e_5x5_reduce'], weights_noisy['inception_4e_5x5'], biases_noisy['inception_4e_5x5'], 1, 1)
	err_lyr['inception_4e_5x5'] = tf.get_variable(name='inception_4e_5x5_lyr_err', shape=inception_4e_5x5.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4e_5x5'] = tf.add(inception_4e_5x5, err_lyr['inception_4e_5x5'])
	inception_4e_pool = max_pool(inception_4d_output, 3, 3, 1, 1)
	inception_4e_pool_proj = conv(inception_4e_pool, weights_noisy['inception_4e_pool_proj'], biases_noisy['inception_4e_pool_proj'], 1, 1)
	err_lyr['inception_4e_pool_proj'] = tf.get_variable(name='inception_4e_pool_proj_lyr_err', shape=inception_4e_pool_proj.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_4e_pool_proj'] = tf.add(inception_4e_pool_proj, err_lyr['inception_4e_pool_proj'])
	inception_4e_output = concat([layers_err['inception_4e_1x1'], layers_err['inception_4e_3x3'], layers_err['inception_4e_5x5'], layers_err['inception_4e_pool_proj']], 3)
	pool4_3x3_s2 = max_pool(inception_4e_output, 3, 3, 2, 2)
	inception_5a_1x1 = conv(pool4_3x3_s2, weights_noisy['inception_5a_1x1'], biases_noisy['inception_5a_1x1'], 1, 1)
	err_lyr['inception_5a_1x1'] = tf.get_variable(name='inception_5a_1x1_lyr_err', shape=inception_5a_1x1.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_5a_1x1'] = tf.add(inception_5a_1x1, err_lyr['inception_5a_1x1'])
	inception_5a_3x3_reduce = conv(pool4_3x3_s2, weights_noisy['inception_5a_3x3_reduce'], biases_noisy['inception_5a_3x3_reduce'], 1, 1)
	err_lyr['inception_5a_3x3_reduce'] = tf.get_variable(name='inception_5a_3x3_reduce_lyr_err', shape=inception_5a_3x3_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_5a_3x3_reduce'] = tf.add(inception_5a_3x3_reduce, err_lyr['inception_5a_3x3_reduce'])
	inception_5a_3x3 = conv(layers_err['inception_5a_3x3_reduce'], weights_noisy['inception_5a_3x3'], biases_noisy['inception_5a_3x3'], 1, 1)
	err_lyr['inception_5a_3x3'] = tf.get_variable(name='inception_5a_3x3_lyr_err', shape=inception_5a_3x3.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_5a_3x3'] = tf.add(inception_5a_3x3, err_lyr['inception_5a_3x3'])
	inception_5a_5x5_reduce = conv(pool4_3x3_s2, weights_noisy['inception_5a_5x5_reduce'], biases_noisy['inception_5a_5x5_reduce'], 1, 1)
	err_lyr['inception_5a_5x5_reduce'] = tf.get_variable(name='inception_5a_5x5_reduce_lyr_err', shape=inception_5a_5x5_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_5a_5x5_reduce'] = tf.add(inception_5a_5x5_reduce, err_lyr['inception_5a_5x5_reduce'])
	inception_5a_5x5 = conv(layers_err['inception_5a_5x5_reduce'], weights_noisy['inception_5a_5x5'], biases_noisy['inception_5a_5x5'], 1, 1)
	err_lyr['inception_5a_5x5'] = tf.get_variable(name='inception_5a_5x5_lyr_err', shape=inception_5a_5x5.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_5a_5x5'] = tf.add(inception_5a_5x5, err_lyr['inception_5a_5x5'])
	inception_5a_pool = max_pool(pool4_3x3_s2, 3, 3, 1, 1)
	inception_5a_pool_proj = conv(inception_5a_pool, weights_noisy['inception_5a_pool_proj'], biases_noisy['inception_5a_pool_proj'], 1, 1)
	err_lyr['inception_5a_pool_proj'] = tf.get_variable(name='inception_5a_pool_proj_lyr_err', shape=inception_5a_pool_proj.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_5a_pool_proj'] = tf.add(inception_5a_pool_proj, err_lyr['inception_5a_pool_proj'])
	inception_5a_output = concat([layers_err['inception_5a_1x1'], layers_err['inception_5a_3x3'], layers_err['inception_5a_5x5'], layers_err['inception_5a_pool_proj']], 3)
	inception_5b_1x1 = conv(inception_5a_output, weights_noisy['inception_5b_1x1'], biases_noisy['inception_5b_1x1'], 1, 1)
	err_lyr['inception_5b_1x1'] = tf.get_variable(name='inception_5b_1x1_lyr_err', shape=inception_5b_1x1.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_5b_1x1'] = tf.add(inception_5b_1x1, err_lyr['inception_5b_1x1'])
	inception_5b_3x3_reduce = conv(inception_5a_output, weights_noisy['inception_5b_3x3_reduce'], biases_noisy['inception_5b_3x3_reduce'], 1, 1)
	err_lyr['inception_5b_3x3_reduce'] = tf.get_variable(name='inception_5b_3x3_reduce_lyr_err', shape=inception_5b_3x3_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_5b_3x3_reduce'] = tf.add(inception_5b_3x3_reduce, err_lyr['inception_5b_3x3_reduce'])
	inception_5b_3x3 = conv(layers_err['inception_5b_3x3_reduce'], weights_noisy['inception_5b_3x3'], biases_noisy['inception_5b_3x3'], 1, 1)
	err_lyr['inception_5b_3x3'] = tf.get_variable(name='inception_5b_3x3_lyr_err', shape=inception_5b_3x3.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_5b_3x3'] = tf.add(inception_5b_3x3, err_lyr['inception_5b_3x3'])
	inception_5b_5x5_reduce = conv(inception_5a_output, weights_noisy['inception_5b_5x5_reduce'], biases_noisy['inception_5b_5x5_reduce'], 1, 1)
	err_lyr['inception_5b_5x5_reduce'] = tf.get_variable(name='inception_5b_5x5_reduce_lyr_err', shape=inception_5b_5x5_reduce.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_5b_5x5_reduce'] = tf.add(inception_5b_5x5_reduce, err_lyr['inception_5b_5x5_reduce'])
	inception_5b_5x5 = conv(layers_err['inception_5b_5x5_reduce'], weights_noisy['inception_5b_5x5'], biases_noisy['inception_5b_5x5'], 1, 1)
	err_lyr['inception_5b_5x5'] = tf.get_variable(name='inception_5b_5x5_lyr_err', shape=inception_5b_5x5.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_5b_5x5'] = tf.add(inception_5b_5x5, err_lyr['inception_5b_5x5'])
	inception_5b_pool = max_pool(inception_5a_output, 3, 3, 1, 1)
	inception_5b_pool_proj = conv(inception_5b_pool, weights_noisy['inception_5b_pool_proj'], biases_noisy['inception_5b_pool_proj'], 1, 1)
	err_lyr['inception_5b_pool_proj'] = tf.get_variable(name='inception_5b_pool_proj_lyr_err', shape=inception_5b_pool_proj.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['inception_5b_pool_proj'] = tf.add(inception_5b_pool_proj, err_lyr['inception_5b_pool_proj'])
	inception_5b_output = concat([layers_err['inception_5b_1x1'], layers_err['inception_5b_3x3'], layers_err['inception_5b_5x5'], layers_err['inception_5b_pool_proj']], 3)
	pool5_7x7_s1 = avg_pool(inception_5b_output, 7, 7, 1, 1, padding='VALID')
	loss3_classifier = fc(pool5_7x7_s1, weights_noisy['loss3_classifier'], biases_noisy['loss3_classifier'], relu=False)
	err_lyr['loss3_classifier'] = tf.get_variable(name='loss3_classifier_lyr_err', shape=loss3_classifier.shape[1:], initializer=tf.random_normal_initializer(mean=err_mean[3], stddev=err_stddev[3]), trainable=train_vars[3])
	layers_err['loss3_classifier'] = tf.add(loss3_classifier, err_lyr['loss3_classifier'])
	return layers_err['loss3_classifier'], err_w, err_b, err_lyr